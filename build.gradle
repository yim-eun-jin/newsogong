plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.6'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
description = 'Gardener_was'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// --- Spring Boot 기본 ---
	implementation 'org.springframework.boot:spring-boot-starter'            // core + logging
	implementation 'org.springframework.boot:spring-boot-starter-web'        // MVC (Tomcat)
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'   // JPA/Hibernate
	implementation 'org.springframework.boot:spring-boot-starter-validation' // Bean Validation

	// --- WebFlux (WebClient 등 리액티브 클라이언트용) ---
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	// Apple Silicon(macOS aarch64) 네이티브 DNS (필요할 때만 유지)
	implementation "io.netty:netty-resolver-dns-native-macos:4.1.127.Final:osx-aarch_64"

	// --- JSON 유틸 ---
	implementation 'org.json:json:20240303'

	// --- Lombok ---
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// --- DB 드라이버 ---
	runtimeOnly 'com.mysql:mysql-connector-j'

	// --- 개발 편의 ---
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	// --- 시큐리티 & JWT ---
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'io.jsonwebtoken:jjwt-api:0.12.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.5'

	// --- Swagger/OpenAPI (MVC용) ---
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'

	// --- 테스트 ---
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}